{"version":3,"sources":["api/users.ts","api/todos.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","index.tsx"],"names":["id","name","username","email","title","completed","userId","UserInfo","user","className","href","TodoInfo","todo","classNames","TodoList","React","memo","todos","map","getNextId","Math","max","App","useState","todosFromServer","usersFromServer","find","setTodos","setTitle","setUserId","submitError","setSubmitError","action","method","onSubmit","event","preventDefault","previous","newTask","type","value","placeholder","onChange","target","Number","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c26f6639.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import { User } from '../../type/User';\n\ntype Props = {\n  user: User,\n};\n\nexport const UserInfo = ({ user } : Props) => {\n  const {\n    email,\n    name,\n  } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import classNames from 'classnames';\nimport { Todo } from '../../type/Todo';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todo: Todo,\n};\n\nexport const TodoInfo = ({ todo }: Props) => {\n  const {\n    id,\n    title,\n    completed,\n    user,\n  } = todo;\n\n  return (\n    <article\n      data-id={id}\n      className={classNames('TodoInfo',\n        {\n          'TodoInfo--completed': completed,\n        })}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n\n      {user && <UserInfo user={user} />}\n    </article>\n  );\n};\n","import React from 'react';\nimport { Todo } from '../../type/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: Todo[]\n};\n\nexport const TodoList: React.FC<Props> = React.memo(({ todos }) => (\n  <section className=\"TodoList\">\n    {todos.map(todo => (\n      <TodoInfo key={todo.id} todo={todo} />\n    ))}\n  </section>\n));\n","import { ChangeEvent, FormEvent, useState } from 'react';\nimport './App.scss';\nimport { Todo } from './type/Todo';\nimport { User } from './type/User';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\nimport { TodoList } from './components/TodoList';\n\nfunction getTodos(): Todo[] {\n  return todosFromServer.map(todo => {\n    const copy: Todo = {\n      ...todo,\n      user: usersFromServer.find(user => user.id === todo.userId) || null,\n    };\n\n    return copy;\n  });\n}\n\nfunction getNextId(todos: Todo[]): number {\n  return Math.max(...(todos.map(({ id }) => id))) + 1;\n}\n\nfunction getUserById(id: number): User | null {\n  return usersFromServer.find(user => user.id === id) || null;\n}\n\nexport const App = () => {\n  const [todos, setTodos] = useState(getTodos());\n  const [title, setTitle] = useState('');\n  const [userId, setUserId] = useState(0);\n  const [submitError, setSubmitError] = useState(false);\n\n  const handleSubmit = (event: FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    if (!userId || !title) {\n      setSubmitError(true);\n\n      return;\n    }\n\n    if (submitError) {\n      setSubmitError(false);\n    }\n\n    setTodos(previous => {\n      const newTask: Todo = {\n        id: getNextId(previous),\n        completed: false,\n        title,\n        user: getUserById(userId),\n      };\n\n      return [...previous, newTask];\n    });\n    setTitle('');\n    setUserId(0);\n  };\n\n  const handleTitleChange = (event: ChangeEvent<HTMLInputElement>) => {\n    const { value } = event.target;\n\n    setTitle(value);\n  };\n\n  const handleUserChange = (event: ChangeEvent<HTMLSelectElement>) => {\n    const { value } = event.target;\n\n    setUserId(Number(value));\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <label>\n            Title:\n            <input\n              type=\"text\"\n              data-cy=\"titleInput\"\n              value={title}\n              placeholder=\"title\"\n              onChange={handleTitleChange}\n            />\n          </label>\n          {\n            submitError\n            && !title\n            && <span className=\"error\">Please enter a title</span>\n          }\n        </div>\n\n        <div className=\"field\">\n          <label>\n            User:\n            <select\n              data-cy=\"userSelect\"\n              onChange={handleUserChange}\n              value={userId}\n            >\n              <option value=\"\">Choose a user</option>\n\n              {usersFromServer.map(({ name, id }) => (\n                <option\n                  key={id}\n                  value={id}\n                >\n                  {name}\n                </option>\n              ))}\n            </select>\n          </label>\n\n          {\n            submitError\n            && !userId\n            && <span className=\"error\">Please choose a user</span>\n          }\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}